{
  "version": 3,
  "sources": ["../../../../../../node_modules/.pnpm/angular-draggable-droppable_0647479d40e959eb5d523b7ddf0f255d/node_modules/angular-draggable-droppable/fesm2022/angular-draggable-droppable.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, inject, ElementRef, Directive, EventEmitter, Renderer2, NgZone, ViewContainerRef, DOCUMENT, Output, Input, NgModule } from '@angular/core';\nimport { Subject, Observable, ReplaySubject, merge, combineLatest, fromEvent } from 'rxjs';\nimport { filter, mergeMap, startWith, map, share, takeUntil, take, takeLast, count, pairwise, distinctUntilChanged } from 'rxjs/operators';\nimport autoScroll from '@mattlewis92/dom-autoscroller';\nclass DraggableHelper {\n  constructor() {\n    this.currentDrag = new Subject();\n  }\n  static {\n    this.ɵfac = function DraggableHelper_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DraggableHelper)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DraggableHelper,\n      factory: DraggableHelper.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableHelper, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.\n * ```html\n  <div style=\"overflow: scroll\" mwlDraggableScrollContainer>\n    <div mwlDraggable>Drag me!</div>\n  </div>\n  ```\n */\nclass DraggableScrollContainerDirective {\n  constructor() {\n    this.elementRef = inject(ElementRef);\n  }\n  static {\n    this.ɵfac = function DraggableScrollContainerDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DraggableScrollContainerDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DraggableScrollContainerDirective,\n      selectors: [[\"\", \"mwlDraggableScrollContainer\", \"\"]]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableScrollContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDraggableScrollContainer]'\n    }]\n  }], null, null);\n})();\nfunction addClass(renderer, element, classToAdd) {\n  if (classToAdd) {\n    classToAdd.split(' ').forEach(className => renderer.addClass(element.nativeElement, className));\n  }\n}\nfunction removeClass(renderer, element, classToRemove) {\n  if (classToRemove) {\n    classToRemove.split(' ').forEach(className => renderer.removeClass(element.nativeElement, className));\n  }\n}\nclass DraggableDirective {\n  constructor() {\n    /**\n     * The axis along which the element is draggable\n     */\n    this.dragAxis = {\n      x: true,\n      y: true\n    };\n    /**\n     * Snap all drags to an x / y grid\n     */\n    this.dragSnapGrid = {};\n    /**\n     * Show a ghost element that shows the drag when dragging\n     */\n    this.ghostDragEnabled = true;\n    /**\n     * Show the original element when ghostDragEnabled is true\n     */\n    this.showOriginalElementWhileDragging = false;\n    /**\n     * The cursor to use when hovering over a draggable element\n     */\n    this.dragCursor = '';\n    /*\n     * Options used to control the behaviour of auto scrolling: https://www.npmjs.com/package/dom-autoscroller\n     */\n    this.autoScroll = {\n      margin: 20\n    };\n    /**\n     * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n     */\n    this.dragPointerDown = new EventEmitter();\n    /**\n     * Called when the element has started to be dragged.\n     * Only called after at least one mouse or touch move event.\n     * If you call $event.cancelDrag$.emit() it will cancel the current drag\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * Called after the ghost element has been created\n     */\n    this.ghostElementCreated = new EventEmitter();\n    /**\n     * Called when the element is being dragged\n     */\n    this.dragging = new EventEmitter();\n    /**\n     * Called after the element is dragged\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * @hidden\n     */\n    this.pointerDown$ = new Subject();\n    /**\n     * @hidden\n     */\n    this.pointerMove$ = new Subject();\n    /**\n     * @hidden\n     */\n    this.pointerUp$ = new Subject();\n    this.eventListenerSubscriptions = {};\n    this.destroy$ = new Subject();\n    this.timeLongPress = {\n      timerBegin: 0,\n      timerEnd: 0\n    };\n    this.element = inject(ElementRef);\n    this.renderer = inject(Renderer2);\n    this.draggableHelper = inject(DraggableHelper);\n    this.zone = inject(NgZone);\n    this.vcr = inject(ViewContainerRef);\n    this.scrollContainer = inject(DraggableScrollContainerDirective, {\n      optional: true\n    });\n    this.document = inject(DOCUMENT);\n  }\n  ngOnInit() {\n    this.checkEventListeners();\n    const pointerDragged$ = this.pointerDown$.pipe(filter(() => this.canDrag()), mergeMap(pointerDownEvent => {\n      // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61\n      // stop mouse events propagating up the chain\n      if (pointerDownEvent.event.stopPropagation && !this.scrollContainer) {\n        pointerDownEvent.event.stopPropagation();\n      }\n      // hack to prevent text getting selected in safari while dragging\n      const globalDragStyle = this.renderer.createElement('style');\n      this.renderer.setAttribute(globalDragStyle, 'type', 'text/css');\n      this.renderer.appendChild(globalDragStyle, this.renderer.createText(`\n          body * {\n           -moz-user-select: none;\n           -ms-user-select: none;\n           -webkit-user-select: none;\n           user-select: none;\n          }\n        `));\n      requestAnimationFrame(() => {\n        this.document.head.appendChild(globalDragStyle);\n      });\n      const startScrollPosition = this.getScrollPosition();\n      const scrollContainerScroll$ = new Observable(observer => {\n        const scrollContainer = this.scrollContainer ? this.scrollContainer.elementRef.nativeElement : 'window';\n        return this.renderer.listen(scrollContainer, 'scroll', e => observer.next(e));\n      }).pipe(startWith(startScrollPosition), map(() => this.getScrollPosition()));\n      const currentDrag$ = new Subject();\n      const cancelDrag$ = new ReplaySubject();\n      if (this.dragPointerDown.observers.length > 0) {\n        this.zone.run(() => {\n          this.dragPointerDown.next({\n            x: 0,\n            y: 0\n          });\n        });\n      }\n      const dragComplete$ = merge(this.pointerUp$, this.pointerDown$, cancelDrag$, this.destroy$).pipe(share());\n      const pointerMove = combineLatest([this.pointerMove$, scrollContainerScroll$]).pipe(map(([pointerMoveEvent, scroll]) => {\n        return {\n          currentDrag$,\n          transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n          transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n          clientX: pointerMoveEvent.clientX,\n          clientY: pointerMoveEvent.clientY,\n          scrollLeft: scroll.left,\n          scrollTop: scroll.top,\n          target: pointerMoveEvent.event.target\n        };\n      }), map(moveData => {\n        if (this.dragSnapGrid.x) {\n          moveData.transformX = Math.round(moveData.transformX / this.dragSnapGrid.x) * this.dragSnapGrid.x;\n        }\n        if (this.dragSnapGrid.y) {\n          moveData.transformY = Math.round(moveData.transformY / this.dragSnapGrid.y) * this.dragSnapGrid.y;\n        }\n        return moveData;\n      }), map(moveData => {\n        if (!this.dragAxis.x) {\n          moveData.transformX = 0;\n        }\n        if (!this.dragAxis.y) {\n          moveData.transformY = 0;\n        }\n        return moveData;\n      }), map(moveData => {\n        const scrollX = moveData.scrollLeft - startScrollPosition.left;\n        const scrollY = moveData.scrollTop - startScrollPosition.top;\n        return {\n          ...moveData,\n          x: moveData.transformX + scrollX,\n          y: moveData.transformY + scrollY\n        };\n      }), filter(({\n        x,\n        y,\n        transformX,\n        transformY\n      }) => !this.validateDrag || this.validateDrag({\n        x,\n        y,\n        transform: {\n          x: transformX,\n          y: transformY\n        }\n      })), takeUntil(dragComplete$), share());\n      const dragStarted$ = pointerMove.pipe(take(1), share());\n      const dragEnded$ = pointerMove.pipe(takeLast(1), share());\n      dragStarted$.subscribe(({\n        clientX,\n        clientY,\n        x,\n        y\n      }) => {\n        if (this.dragStart.observers.length > 0) {\n          this.zone.run(() => {\n            this.dragStart.next({\n              cancelDrag$\n            });\n          });\n        }\n        this.scroller = autoScroll([this.scrollContainer ? this.scrollContainer.elementRef.nativeElement : this.document.defaultView], {\n          ...this.autoScroll,\n          autoScroll() {\n            return true;\n          }\n        });\n        addClass(this.renderer, this.element, this.dragActiveClass);\n        if (this.ghostDragEnabled) {\n          const rect = this.element.nativeElement.getBoundingClientRect();\n          const clone = this.element.nativeElement.cloneNode(true);\n          if (!this.showOriginalElementWhileDragging) {\n            this.renderer.setStyle(this.element.nativeElement, 'visibility', 'hidden');\n          }\n          if (this.ghostElementAppendTo) {\n            this.ghostElementAppendTo.appendChild(clone);\n          } else {\n            this.element.nativeElement.parentNode.insertBefore(clone, this.element.nativeElement.nextSibling);\n          }\n          this.ghostElement = clone;\n          this.document.body.style.cursor = this.dragCursor;\n          this.setElementStyles(clone, {\n            position: 'fixed',\n            top: `${rect.top}px`,\n            left: `${rect.left}px`,\n            width: `${rect.width}px`,\n            height: `${rect.height}px`,\n            cursor: this.dragCursor,\n            margin: '0',\n            willChange: 'transform',\n            pointerEvents: 'none'\n          });\n          if (this.ghostElementTemplate) {\n            const viewRef = this.vcr.createEmbeddedView(this.ghostElementTemplate);\n            clone.innerHTML = '';\n            viewRef.rootNodes.filter(node => node instanceof Node).forEach(node => {\n              clone.appendChild(node);\n            });\n            dragEnded$.subscribe(() => {\n              this.vcr.remove(this.vcr.indexOf(viewRef));\n            });\n          }\n          if (this.ghostElementCreated.observers.length > 0) {\n            this.zone.run(() => {\n              this.ghostElementCreated.emit({\n                clientX: clientX - x,\n                clientY: clientY - y,\n                element: clone\n              });\n            });\n          }\n          dragEnded$.subscribe(() => {\n            clone.parentElement.removeChild(clone);\n            this.ghostElement = null;\n            this.renderer.setStyle(this.element.nativeElement, 'visibility', '');\n          });\n        }\n        this.draggableHelper.currentDrag.next(currentDrag$);\n      });\n      dragEnded$.pipe(mergeMap(dragEndData => {\n        const dragEndData$ = cancelDrag$.pipe(count(), take(1), map(calledCount => ({\n          ...dragEndData,\n          dragCancelled: calledCount > 0\n        })));\n        cancelDrag$.complete();\n        return dragEndData$;\n      })).subscribe(({\n        x,\n        y,\n        dragCancelled\n      }) => {\n        this.scroller.destroy();\n        if (this.dragEnd.observers.length > 0) {\n          this.zone.run(() => {\n            this.dragEnd.next({\n              x,\n              y,\n              dragCancelled\n            });\n          });\n        }\n        removeClass(this.renderer, this.element, this.dragActiveClass);\n        currentDrag$.complete();\n      });\n      merge(dragComplete$, dragEnded$).pipe(take(1)).subscribe(() => {\n        requestAnimationFrame(() => {\n          this.document.head.removeChild(globalDragStyle);\n        });\n      });\n      return pointerMove;\n    }), share());\n    merge(pointerDragged$.pipe(take(1), map(value => [, value])), pointerDragged$.pipe(pairwise())).pipe(filter(([previous, next]) => {\n      if (!previous) {\n        return true;\n      }\n      return previous.x !== next.x || previous.y !== next.y;\n    }), map(([previous, next]) => next)).subscribe(({\n      x,\n      y,\n      currentDrag$,\n      clientX,\n      clientY,\n      transformX,\n      transformY,\n      target\n    }) => {\n      if (this.dragging.observers.length > 0) {\n        this.zone.run(() => {\n          this.dragging.next({\n            x,\n            y\n          });\n        });\n      }\n      requestAnimationFrame(() => {\n        if (this.ghostElement) {\n          const transform = `translate3d(${transformX}px, ${transformY}px, 0px)`;\n          this.setElementStyles(this.ghostElement, {\n            transform,\n            '-webkit-transform': transform,\n            '-ms-transform': transform,\n            '-moz-transform': transform,\n            '-o-transform': transform\n          });\n        }\n      });\n      currentDrag$.next({\n        clientX,\n        clientY,\n        dropData: this.dropData,\n        target\n      });\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes.dragAxis) {\n      this.checkEventListeners();\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribeEventListeners();\n    this.pointerDown$.complete();\n    this.pointerMove$.complete();\n    this.pointerUp$.complete();\n    this.destroy$.next();\n  }\n  checkEventListeners() {\n    const canDrag = this.canDrag();\n    const hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(this.element.nativeElement, 'mousedown', event => {\n          this.onMouseDown(event);\n        });\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen('document', 'mouseup', event => {\n          this.onMouseUp(event);\n        });\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(this.element.nativeElement, 'touchstart', event => {\n          this.onTouchStart(event);\n        });\n        this.eventListenerSubscriptions.touchend = this.renderer.listen('document', 'touchend', event => {\n          this.onTouchEnd(event);\n        });\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen('document', 'touchcancel', event => {\n          this.onTouchEnd(event);\n        });\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(this.element.nativeElement, 'mouseenter', () => {\n          this.onMouseEnter();\n        });\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(this.element.nativeElement, 'mouseleave', () => {\n          this.onMouseLeave();\n        });\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n  onMouseDown(event) {\n    if (event.button === 0) {\n      if (!this.eventListenerSubscriptions.mousemove) {\n        this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove', mouseMoveEvent => {\n          this.pointerMove$.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        });\n      }\n      this.pointerDown$.next({\n        event,\n        clientX: event.clientX,\n        clientY: event.clientY\n      });\n    }\n  }\n  onMouseUp(event) {\n    if (event.button === 0) {\n      if (this.eventListenerSubscriptions.mousemove) {\n        this.eventListenerSubscriptions.mousemove();\n        delete this.eventListenerSubscriptions.mousemove;\n      }\n      this.pointerUp$.next({\n        event,\n        clientX: event.clientX,\n        clientY: event.clientY\n      });\n    }\n  }\n  onTouchStart(event) {\n    let startScrollPosition;\n    let isDragActivated;\n    let hasContainerScrollbar;\n    if (this.touchStartLongPress) {\n      this.timeLongPress.timerBegin = Date.now();\n      isDragActivated = false;\n      hasContainerScrollbar = this.hasScrollbar();\n      startScrollPosition = this.getScrollPosition();\n    }\n    if (!this.eventListenerSubscriptions.touchmove) {\n      const contextMenuListener = fromEvent(this.document, 'contextmenu').subscribe(e => {\n        e.preventDefault();\n      });\n      const touchMoveListener = fromEvent(this.document, 'touchmove', {\n        passive: false\n      }).subscribe(touchMoveEvent => {\n        if (this.touchStartLongPress && !isDragActivated && hasContainerScrollbar) {\n          isDragActivated = this.shouldBeginDrag(event, touchMoveEvent, startScrollPosition);\n        }\n        if (!this.touchStartLongPress || !hasContainerScrollbar || isDragActivated) {\n          touchMoveEvent.preventDefault();\n          this.pointerMove$.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      });\n      this.eventListenerSubscriptions.touchmove = () => {\n        contextMenuListener.unsubscribe();\n        touchMoveListener.unsubscribe();\n      };\n    }\n    this.pointerDown$.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n  onTouchEnd(event) {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n      if (this.touchStartLongPress) {\n        this.enableScroll();\n      }\n    }\n    this.pointerUp$.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n  onMouseEnter() {\n    this.setCursor(this.dragCursor);\n  }\n  onMouseLeave() {\n    this.setCursor('');\n  }\n  canDrag() {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n  setCursor(value) {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n    }\n  }\n  unsubscribeEventListeners() {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      this.eventListenerSubscriptions[type]();\n      delete this.eventListenerSubscriptions[type];\n    });\n  }\n  setElementStyles(element, styles) {\n    Object.keys(styles).forEach(key => {\n      this.renderer.setStyle(element, key, styles[key]);\n    });\n  }\n  getScrollElement() {\n    if (this.scrollContainer) {\n      return this.scrollContainer.elementRef.nativeElement;\n    } else {\n      return this.document.body;\n    }\n  }\n  getScrollPosition() {\n    if (this.scrollContainer) {\n      return {\n        top: this.scrollContainer.elementRef.nativeElement.scrollTop,\n        left: this.scrollContainer.elementRef.nativeElement.scrollLeft\n      };\n    } else {\n      return {\n        top: window.pageYOffset || this.document.documentElement.scrollTop,\n        left: window.pageXOffset || this.document.documentElement.scrollLeft\n      };\n    }\n  }\n  shouldBeginDrag(event, touchMoveEvent, startScrollPosition) {\n    const moveScrollPosition = this.getScrollPosition();\n    const deltaScroll = {\n      top: Math.abs(moveScrollPosition.top - startScrollPosition.top),\n      left: Math.abs(moveScrollPosition.left - startScrollPosition.left)\n    };\n    const deltaX = Math.abs(touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX) - deltaScroll.left;\n    const deltaY = Math.abs(touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY) - deltaScroll.top;\n    const deltaTotal = deltaX + deltaY;\n    const longPressConfig = this.touchStartLongPress;\n    if (deltaTotal > longPressConfig.delta || deltaScroll.top > 0 || deltaScroll.left > 0) {\n      this.timeLongPress.timerBegin = Date.now();\n    }\n    this.timeLongPress.timerEnd = Date.now();\n    const duration = this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;\n    if (duration >= longPressConfig.delay) {\n      this.disableScroll();\n      return true;\n    }\n    return false;\n  }\n  enableScroll() {\n    if (this.scrollContainer) {\n      this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', '');\n    }\n    this.renderer.setStyle(this.document.body, 'overflow', '');\n  }\n  disableScroll() {\n    /* istanbul ignore next */\n    if (this.scrollContainer) {\n      this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', 'hidden');\n    }\n    this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n  }\n  hasScrollbar() {\n    const scrollContainer = this.getScrollElement();\n    const containerHasHorizontalScroll = scrollContainer.scrollWidth > scrollContainer.clientWidth;\n    const containerHasVerticalScroll = scrollContainer.scrollHeight > scrollContainer.clientHeight;\n    return containerHasHorizontalScroll || containerHasVerticalScroll;\n  }\n  static {\n    this.ɵfac = function DraggableDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DraggableDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DraggableDirective,\n      selectors: [[\"\", \"mwlDraggable\", \"\"]],\n      inputs: {\n        dropData: \"dropData\",\n        dragAxis: \"dragAxis\",\n        dragSnapGrid: \"dragSnapGrid\",\n        ghostDragEnabled: \"ghostDragEnabled\",\n        showOriginalElementWhileDragging: \"showOriginalElementWhileDragging\",\n        validateDrag: \"validateDrag\",\n        dragCursor: \"dragCursor\",\n        dragActiveClass: \"dragActiveClass\",\n        ghostElementAppendTo: \"ghostElementAppendTo\",\n        ghostElementTemplate: \"ghostElementTemplate\",\n        touchStartLongPress: \"touchStartLongPress\",\n        autoScroll: \"autoScroll\"\n      },\n      outputs: {\n        dragPointerDown: \"dragPointerDown\",\n        dragStart: \"dragStart\",\n        ghostElementCreated: \"ghostElementCreated\",\n        dragging: \"dragging\",\n        dragEnd: \"dragEnd\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDraggable]'\n    }]\n  }], null, {\n    dropData: [{\n      type: Input\n    }],\n    dragAxis: [{\n      type: Input\n    }],\n    dragSnapGrid: [{\n      type: Input\n    }],\n    ghostDragEnabled: [{\n      type: Input\n    }],\n    showOriginalElementWhileDragging: [{\n      type: Input\n    }],\n    validateDrag: [{\n      type: Input\n    }],\n    dragCursor: [{\n      type: Input\n    }],\n    dragActiveClass: [{\n      type: Input\n    }],\n    ghostElementAppendTo: [{\n      type: Input\n    }],\n    ghostElementTemplate: [{\n      type: Input\n    }],\n    touchStartLongPress: [{\n      type: Input\n    }],\n    autoScroll: [{\n      type: Input\n    }],\n    dragPointerDown: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    ghostElementCreated: [{\n      type: Output\n    }],\n    dragging: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\nfunction isCoordinateWithinRectangle(clientX, clientY, rect) {\n  return clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;\n}\nclass DroppableDirective {\n  constructor() {\n    /**\n     * Called when a draggable element starts overlapping the element\n     */\n    this.dragEnter = new EventEmitter();\n    /**\n     * Called when a draggable element stops overlapping the element\n     */\n    this.dragLeave = new EventEmitter();\n    /**\n     * Called when a draggable element is moved over the element\n     */\n    this.dragOver = new EventEmitter();\n    /**\n     * Called when a draggable element is dropped on this element\n     */\n    this.drop = new EventEmitter(); // eslint-disable-line  @angular-eslint/no-output-native\n    this.element = inject(ElementRef);\n    this.draggableHelper = inject(DraggableHelper);\n    this.zone = inject(NgZone);\n    this.renderer = inject(Renderer2);\n    this.scrollContainer = inject(DraggableScrollContainerDirective, {\n      optional: true\n    });\n  }\n  ngOnInit() {\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(drag$ => {\n      addClass(this.renderer, this.element, this.dragActiveClass);\n      const droppableElement = {\n        updateCache: true\n      };\n      const deregisterScrollListener = this.renderer.listen(this.scrollContainer ? this.scrollContainer.elementRef.nativeElement : 'window', 'scroll', () => {\n        droppableElement.updateCache = true;\n      });\n      let currentDragEvent;\n      const overlaps$ = drag$.pipe(map(({\n        clientX,\n        clientY,\n        dropData,\n        target\n      }) => {\n        currentDragEvent = {\n          clientX,\n          clientY,\n          dropData,\n          target\n        };\n        if (droppableElement.updateCache) {\n          droppableElement.rect = this.element.nativeElement.getBoundingClientRect();\n          if (this.scrollContainer) {\n            droppableElement.scrollContainerRect = this.scrollContainer.elementRef.nativeElement.getBoundingClientRect();\n          }\n          droppableElement.updateCache = false;\n        }\n        const isWithinElement = isCoordinateWithinRectangle(clientX, clientY, droppableElement.rect);\n        const isDropAllowed = !this.validateDrop || this.validateDrop({\n          clientX,\n          clientY,\n          target,\n          dropData\n        });\n        if (droppableElement.scrollContainerRect) {\n          return isWithinElement && isDropAllowed && isCoordinateWithinRectangle(clientX, clientY, droppableElement.scrollContainerRect);\n        } else {\n          return isWithinElement && isDropAllowed;\n        }\n      }));\n      const overlapsChanged$ = overlaps$.pipe(distinctUntilChanged());\n      let dragOverActive; // TODO - see if there's a way of doing this via rxjs\n      overlapsChanged$.pipe(filter(overlapsNow => overlapsNow)).subscribe(() => {\n        dragOverActive = true;\n        addClass(this.renderer, this.element, this.dragOverClass);\n        if (this.dragEnter.observers.length > 0) {\n          this.zone.run(() => {\n            this.dragEnter.next(currentDragEvent);\n          });\n        }\n      });\n      overlaps$.pipe(filter(overlapsNow => overlapsNow)).subscribe(() => {\n        if (this.dragOver.observers.length > 0) {\n          this.zone.run(() => {\n            this.dragOver.next(currentDragEvent);\n          });\n        }\n      });\n      overlapsChanged$.pipe(pairwise(), filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)).subscribe(() => {\n        dragOverActive = false;\n        removeClass(this.renderer, this.element, this.dragOverClass);\n        if (this.dragLeave.observers.length > 0) {\n          this.zone.run(() => {\n            this.dragLeave.next(currentDragEvent);\n          });\n        }\n      });\n      drag$.subscribe({\n        complete: () => {\n          deregisterScrollListener();\n          removeClass(this.renderer, this.element, this.dragActiveClass);\n          if (dragOverActive) {\n            removeClass(this.renderer, this.element, this.dragOverClass);\n            if (this.drop.observers.length > 0) {\n              this.zone.run(() => {\n                this.drop.next(currentDragEvent);\n              });\n            }\n          }\n        }\n      });\n    });\n  }\n  ngOnDestroy() {\n    if (this.currentDragSubscription) {\n      this.currentDragSubscription.unsubscribe();\n    }\n  }\n  static {\n    this.ɵfac = function DroppableDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DroppableDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DroppableDirective,\n      selectors: [[\"\", \"mwlDroppable\", \"\"]],\n      inputs: {\n        dragOverClass: \"dragOverClass\",\n        dragActiveClass: \"dragActiveClass\",\n        validateDrop: \"validateDrop\"\n      },\n      outputs: {\n        dragEnter: \"dragEnter\",\n        dragLeave: \"dragLeave\",\n        dragOver: \"dragOver\",\n        drop: \"drop\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DroppableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDroppable]'\n    }]\n  }], null, {\n    dragOverClass: [{\n      type: Input\n    }],\n    dragActiveClass: [{\n      type: Input\n    }],\n    validateDrop: [{\n      type: Input\n    }],\n    dragEnter: [{\n      type: Output\n    }],\n    dragLeave: [{\n      type: Output\n    }],\n    dragOver: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * @deprecated import the standalone `DraggableDirective` and `DroppableDirective` directives instead\n */\nclass DragAndDropModule {\n  static {\n    this.ɵfac = function DragAndDropModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DragAndDropModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DragAndDropModule,\n      imports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],\n      exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragAndDropModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],\n      exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of angular-draggable-droppable\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DragAndDropModule, DraggableDirective, DraggableScrollContainerDirective, DroppableDirective };\n"],
  "mappings": "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",
  "names": []
}
